// IMA2_SESLib.idl : IDL source for IMA2_SESLib.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (IMA2_SESLib.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(AAC834AD-CEB8-42A1-848A-F74BCFED51DD),
		dual,
		helpstring("ISES Interface"),
		pointer_default(unique)
	]
	interface ISES : IDispatch
	{
		[id(1), helpstring("method CalculateSalience")] HRESULT CalculateSalience();
		[propget, id(2), helpstring("property FeatureGateLevels")] HRESULT FeatureGateLevels([out, retval] short *pVal);
		[propput, id(2), helpstring("property FeatureGateLevels")] HRESULT FeatureGateLevels([in] short newVal);
		[propget, id(3), helpstring("property NumAttnLocations")] HRESULT NumAttnLocations([out, retval] long *pVal);
		[propput, id(3), helpstring("property NumAttnLocations")] HRESULT NumAttnLocations([in] long newVal);
		[id(4), helpstring("method ProcessImage")] HRESULT ProcessImage();
		[propget, id(5), helpstring("property DatabaseName")] HRESULT DatabaseName([out, retval] BSTR *pVal);
		[propput, id(5), helpstring("property DatabaseName")] HRESULT DatabaseName([in] BSTR newVal);
		[id(6), helpstring("method ResetSES")] HRESULT ResetSES();
		//[id(7), helpstring("method RunFGate")] void RunFGate(BSTR image_name, int iNodeID, int iNumPts);
		[id(8), helpstring("method test")] HRESULT test();
	};

[
	uuid(B3425986-44F8-42A4-8CDA-03DDF005610E),
	version(1.0),
	helpstring("(IMA2 Components) - SES Lib")
]
library IMA2_SESLIBLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");
	importlib ("O:\include\ima2.tlb"); 

	[
		uuid(180E794B-3C04-42D6-A7F5-5E9FC661D168),
		helpstring("SES Class")
	]
	coclass SES
	{
		[default] interface ISES;
		interface IComponent; 
	};
};
